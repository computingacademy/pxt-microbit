{
  "BitKit": "Extension blocks",
  "BitKit.getColor": "Get the color value from the color sensor in R:G:B.",
  "BitKit.onColor": "Do something when the color sensor detects a specific color.",
  "BitKit.onColor|param|event": "type of color to detect",
  "BitKit.onColor|param|handler": "code to run",
  "BitKit.onLinePosition": "Do something when the line follower recognized the position of the line underneath.",
  "BitKit.onLinePosition|param|event": "type of liner to detect",
  "BitKit.onLinePosition|param|handler": "code to run",
  "BitKit.seeWhite": "See if colour sensor detected a specific custom colour",
  "BitKit.setMotormoduleAction": "Set the actions and the moving speed of motormodule.",
  "BitKit.setMotormoduleAction|param|direction": "the direction that want to set.",
  "BitKit.setMotormoduleAction|param|speed": "the speed that want to run.",
  "BitKit.setMotormoduleSpeed": "Set the speed of motors on motormodule.",
  "BitKit.setMotormoduleSpeed|param|left": "the left speed you want to run.",
  "BitKit.setMotormoduleSpeed|param|right": "the right speed you want to run.",
  "BitKit.stopMotormodule": "Stop the motormodule.",
  "BitKit.wasColorTriggered": "See if the color sensor detected a specific color.",
  "BitKit.wasColorTriggered|param|event": "of color device",
  "BitKit.wasLinePositionTriggered": "See if the line follower recognized the position of the line underneath.",
  "BitKit.wasLinePositionTriggered|param|event": "of liner device",
  "NeoPixelColors": "Well known colors for a NeoPixel strip",
  "NeoPixelMode": "Different modes for RGB or RGB+W NeoPixel strips",
  "calibrate": "Calibration blocks",
  "calibrate.forwards": "Move the micro:car forwards for 5 seconds then measure and see how straight it goes\nno input",
  "calibrate.rotates": "Rotate the micro:car for 5 seconds then measure how far it got\nno input",
  "grid": "Grid Blocks",
  "grid.forward": "Move the micro:car forwards for 5 seconds then measure and see how straight it goes\nno input",
  "grid.setup": "Calibration setup\ntwo inputs",
  "grid.turnleft": "Turn Left\nno input",
  "grid.turnright": "Turn Right\nno input",
  "lights": "Headlights Blocks",
  "lights.IfThereIsCoral": "Red light on coral\nmimic the colour of the ground under the bot.\neg. see red, show red, see blue, show blue",
  "lights.IfThereIsCoralAnd": "Red light and sound on coral\nmimic the colour of the ground under the bot.\neg. see red, show red, see blue, show blue",
  "lights.clearAll": "Clear red\nmimic the colour of the ground under the bot.\neg. see red, show red, see blue, show blue",
  "lights.explode": "Make explosion movement and sound\nrattle motors, make noise on speaker, show pretty picture on face",
  "lights.showAny": "Show any\nmimic the colour of the ground under the bot.\neg. see red, show red, see blue, show blue",
  "neopixel": "Functions to operate NeoPixel strips.",
  "neopixel.Strip": "A NeoPixel strip",
  "neopixel.Strip.clear": "Turn off all LEDs.\nYou need to call ``show`` to make the changes visible.",
  "neopixel.Strip.easeBrightness": "Apply brightness to current colors using a quadratic easing function.",
  "neopixel.Strip.length": "Gets the number of pixels declared on the strip",
  "neopixel.Strip.power": "Estimates the electrical current (mA) consumed by the current light configuration.",
  "neopixel.Strip.range": "Create a range of LEDs.",
  "neopixel.Strip.range|param|length": "number of LEDs in the range. eg: 4",
  "neopixel.Strip.range|param|start": "offset in the LED strip to start the range",
  "neopixel.Strip.rotate": "Rotate LEDs forward.\nYou need to call ``show`` to make the changes visible.",
  "neopixel.Strip.rotate|param|offset": "number of pixels to rotate forward, eg: 1",
  "neopixel.Strip.setBrightness": "Set the brightness of the strip. This flag only applies to future operation.",
  "neopixel.Strip.setBrightness|param|brightness": "a measure of LED brightness in 0-255. eg: 255",
  "neopixel.Strip.setMatrixColor": "Set LED to a given color (range 0-255 for r, g, b) in a matrix shaped strip \nYou need to call ``show`` to make the changes visible.",
  "neopixel.Strip.setMatrixColor|param|rgb": "RGB color of the LED",
  "neopixel.Strip.setMatrixColor|param|x": "horizontal position",
  "neopixel.Strip.setMatrixColor|param|y": "horizontal position",
  "neopixel.Strip.setMatrixWidth": "Sets the number of pixels in a matrix shaped strip",
  "neopixel.Strip.setMatrixWidth|param|width": "number of pixels in a row",
  "neopixel.Strip.setPin": "Set the pin where the neopixel is connected, defaults to P0.",
  "neopixel.Strip.setPixelColor": "Set LED to a given color (range 0-255 for r, g, b). \nYou need to call ``show`` to make the changes visible.",
  "neopixel.Strip.setPixelColor|param|pixeloffset": "position of the NeoPixel in the strip",
  "neopixel.Strip.setPixelColor|param|rgb": "RGB color of the LED",
  "neopixel.Strip.setPixelWhiteLED": "For NeoPixels with RGB+W LEDs, set the white LED brightness. This only works for RGB+W NeoPixels.",
  "neopixel.Strip.setPixelWhiteLED|param|pixeloffset": "position of the LED in the strip",
  "neopixel.Strip.setPixelWhiteLED|param|white": "brightness of the white LED",
  "neopixel.Strip.shift": "Shift LEDs forward and clear with zeros.\nYou need to call ``show`` to make the changes visible.",
  "neopixel.Strip.shift|param|offset": "number of pixels to shift forward, eg: 1",
  "neopixel.Strip.show": "Send all the changes to the strip.",
  "neopixel.Strip.showBarGraph": "Displays a vertical bar graph based on the `value` and `high` value.\nIf `high` is 0, the chart gets adjusted automatically.",
  "neopixel.Strip.showBarGraph|param|high": "maximum value, eg: 255",
  "neopixel.Strip.showBarGraph|param|value": "current value to plot",
  "neopixel.Strip.showColor": "Shows all LEDs to a given color (range 0-255 for r, g, b).",
  "neopixel.Strip.showColor|param|rgb": "RGB color of the LED",
  "neopixel.Strip.showRainbow": "Shows a rainbow pattern on all LEDs.",
  "neopixel.Strip.showRainbow|param|endHue": "the end hue value for the rainbow, eg: 360",
  "neopixel.Strip.showRainbow|param|startHue": "the start hue value for the rainbow, eg: 1",
  "neopixel.colors": "Gets the RGB value of a known color",
  "neopixel.create": "Create a new NeoPixel driver for `numleds` LEDs.",
  "neopixel.create|param|numleds": "number of leds in the strip, eg: 24,30,60,64",
  "neopixel.create|param|pin": "the pin where the neopixel is connected.",
  "neopixel.hsl": "Converts a hue saturation luminosity value into a RGB color",
  "neopixel.hsl|param|h": "hue from 0 to 360",
  "neopixel.hsl|param|l": "luminosity from 0 to 99",
  "neopixel.hsl|param|s": "saturation from 0 to 99",
  "neopixel.rgb": "Converts red, green, blue channels into a RGB color",
  "neopixel.rgb|param|blue": "value of the blue channel between 0 and 255. eg: 255",
  "neopixel.rgb|param|green": "value of the green channel between 0 and 255. eg: 255",
  "neopixel.rgb|param|red": "value of the red channel between 0 and 255. eg: 255"
}